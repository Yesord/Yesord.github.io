[{"id":"7306721a27e9ec7e2372287f94d883c8","title":"Cmake基础语法","content":"bash# 设置cmake最低版本\ncmake_minimum_required(VERSION 3.2)\n\n# project命令用于指定cmake工程的名称，实际上，它还可以指定cmake工程的版本号（VERSION关键字）、简短的描述（DESCRIPTION关键字）、主页URL（HOMEPAGE_URL关键字）和编译工程使用的语言（LANGUAGES关键字）\n# project(&lt;PROJECT-NAME&gt; [&lt;language-name&gt;...])\n# project(&lt;PROJECT-NAME&gt; [VERSION &lt;major&gt;[.&lt;minor&gt;[.&lt;patch&gt;[.&lt;tweak&gt;]]]] [DESCRIPTION &lt;project-description-string&gt;][HOMEPAGE_URL &lt;url-string&gt;] [LANGUAGES &lt;language-name&gt;...])\n# $&#123;PROJECT_SOURCE_DIR&#125; 和 &lt;PROJECT-NAME&gt;_SOURCE_DIR：本CMakeLists.txt所在的文件夹路径\n# $&#123;PROJECT_NAME&#125;：本CMakeLists.txt的project名称\nproject(xxx)\nproject(mytest VERSION 1.2.3.4)\nproject (mytest HOMEPAGE_URL “https://www.XXX(示例).com”)\n\n# 获取路径下所有的.cpp/.c/.cc文件（不包括子目录），并赋值给变量中\naux_source_directory(路径 变量)\n\n# GLOB_RECURSE 获取目录下的所有cpp文件（不包括子目录），并赋值给SOURCES\nfile(\n        GLOB SOURCES\n        $&#123;PROJECT_SOURCE_DIR&#125;/*.c\n\n)\n# GLOB_RECURSE 获取目录下的所有cpp文件（包括子目录），并赋值给NATIVE_SRC\nfile(\n      GLOB_RECURSE NATIVE_SRC \n      $&#123;PROJECT_SOURCE_DIR&#125;/lib/*.cpp\n)\n\n# 给文件名/路径名或其他字符串起别名，用$&#123;变量&#125;获取变量内容\nset(变量 文件名/路径/...)\n\n# 添加编译选项FOO BAR\n# add_definitions定义宏，但是这种定义方式无法给宏具体值 等价C语言中的#define  MG_ENABLE_OPENSSL\nadd_definitions(-DFOO -DBAR ...)\n\n# add_compile_definitions定义宏，这种方式可以给宏具体值，但是这个指令只要高版本的cmake支持 等价C语言中 #define  MG_ENABLE_OPENSSL   1 \nadd_compile_definitions(MG_ENABLE_OPENSSL=1)\n\n# 打印消息\nmessage(消息)\n\n# 编译子文件夹的CMakeLists.txt\nadd_subdirectory(子文件夹名称)\n\n# 将.cpp/.c/.cc文件生成.a静态库\n# 注意，库文件名称通常为libxxx.so，在这里只要写xxx即可\nadd_library(库文件名称 STATIC 文件)\n\n# 将.cpp/.c/.cc文件生成可执行文件\nadd_executable(可执行文件名称 文件)\n\n# 规定.h头文件路径\ninclude_directories(路径)\n\n# 规定.so/.a库文件路径\nlink_directories(路径)\n\n# 设置编译选项及默认值\noption(TEST_DEBUG &quot;option for debug&quot; OFF)\n\n# 对add_library或add_executable生成的文件进行链接操作\n# 注意，库文件名称通常为libxxx.so，在这里只要写xxx即可\ntarget_link_libraries(库文件名称/可执行文件名称 链接的库文件名称)\n\n \n基础配置流程\nproject(xxx)                                          #必须\n\nadd_subdirectory(子文件夹名称)                         #父目录必须，子目录不必\n\nadd_library(库文件名称 STATIC 文件)                    #通常子目录(二选一)\nadd_executable(可执行文件名称 文件)                     #通常父目录(二选一)\n\ninclude_directories(路径)                              #必须\nlink_directories(路径)                                 #必须\n\ntarget_link_libraries(库文件名称/可执行文件名称 链接的库文件名称)       #必须\n     ","slug":"Cmake基础语法","date":"2023-10-17T11:57:43.000Z","categories_index":"","tags_index":"Linux | Cmake","author_index":"PIKO"},{"id":"92468dc8f04e07f9e105708cbbdde9c2","title":"FreeRTOS的移植","content":"FreeRTOS的移植介绍下FreeRTOS源码内容\n\n\n名称\n描述\n\n\n\nFreeRTOS\nFreeRTOS内核\n\n\nFreeRTOS-Plus\nFreeRTOS组件\n\n\ntools\n工具\n\n\nGitHub-FreeRTOS-Home\nFreeRTOS的GitHub仓库链接\n\n\nQuick_Start_Guide\n快速入门指南官方文档链接\n\n\nUpgrading-to-FreeRTOS-xxx\n升级到指定FreeRTOS版本官方文档链接\n\n\nHistory.txt\nFreeRTOS历史更新记录\n\n\n其他\n其他\n\n\nFreeRTOS内核\n\n\n名称\n描述\n\n\n\nDemo\nFreeRTOS演示例程\n\n\nLicense\nFreeRTOS相关许可\n\n\nSource\nFreeRTOS源码（主要拷贝）\n\n\nTest\n公用以及移植层测试代码\n\n\nSource文件夹freeRTOS源码\n\n\n\n名称\n描述\n\n\n\ninclude\n内包含了FreeRTOS的头文件\n\n\nportable\n内包含了FreeRTOS的移植文件\n\n\ncroutine.c\n协程相关文件\n\n\nevent_groups.c\n事件相关文件\n\n\nlist.c\n列表相关文件（状态相关，必要）\n\n\nqueue.c\n队列相关文件（状态相关，必要）\n\n\nstream_buffer.c\n流式缓冲区相关文件\n\n\ntasks.c\n任务相关文件（必要）\n\n\ntimers.c\n软件定时器相关文件\n\n\nportable文件夹freeRTOS与硬件交互的桥梁\n\n\n\n名称\n描述\n\n\n\nKeil\n指向RVDS文件夹\n\n\nRVDS\n不同内核芯片的移植文件\n\n\nMemMang\n内存管理文件（5种算法）\n\n\n其他的文件用不着可以删掉\nFreeRTOS移植步骤以STM32F103C8T6为例1．添加FreeRTOS源码添加入工程2．添加FreeRTOSConfig.h作用：对FreeRTOS进行配置和裁剪，以及API函数的使能操作系统配置文件:获取途径\n{1.自己手写（https://www.freertos.org/a00110.html有详细说明）2.Demo例程或许有官方支持}\n3．修改系统相关配置Systick 系统滴答时钟需要与FreeRTOSConfig.h里的configTICK_RATE_HZ对应滴答时钟中断需要加上任务切换\n4．修改中断相关配置Systick中断（自己配置）、SVC中断、PendSV中断（这俩在freeRTOS中有定义）因而在stm32f1xx_it.c中需要将相关中断定义注释掉\n5．添加应用程序\nFreeRTOS移植可能出现的问题\n在学习FreeRTOS移植后，编译出现…\\OBJ\\LED.axf: Error: L6218E: Undefined symbol xTaskGetSchedulerState (referred from delay.o).\n\n出现这个错误的原因是xTaskGetSchedulerState的值没有改，需要在FreeRTOS.h中将其宏定义的值改为1即可。\n","slug":"FreeRTOS的移植","date":"2023-10-17T09:33:25.000Z","categories_index":"","tags_index":"RTOS | STM32","author_index":"PIKO"},{"id":"5fb0b2232f7b008486299018a9a2ee11","title":"markdown-example","content":"@TOC\n欢迎使用Markdown编辑器你好！ 这是你第一次使用 Markdown编辑器 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。\n新的改变我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：\n\n全新的界面设计 ，将会带来全新的写作体验；\n在创作中心设置你喜爱的代码高亮样式，Markdown 将代码片显示选择的高亮样式 进行展示；\n增加了 图片拖拽 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；\n全新的 KaTeX数学公式 语法；\n增加了支持甘特图的mermaid语法^1 功能；\n增加了 多屏幕编辑 Markdown文章功能；\n增加了 焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置 等功能，功能按钮位于编辑区域与预览区域中间；\n增加了 检查列表 功能。\n\n功能快捷键撤销：Ctrl/Command + Z重做：Ctrl/Command + Y加粗：Ctrl/Command + B斜体：Ctrl/Command + I标题：Ctrl/Command + Shift + H无序列表：Ctrl/Command + Shift + U有序列表：Ctrl/Command + Shift + O检查列表：Ctrl/Command + Shift + C插入代码：Ctrl/Command + Shift + K插入链接：Ctrl/Command + Shift + L插入图片：Ctrl/Command + Shift + G查找：Ctrl/Command + F替换：Ctrl/Command + G\n合理的创建标题，有助于目录的生成直接输入1次#，并按下space后，将生成1级标题。输入2次#，并按下space后，将生成2级标题。以此类推，我们支持6级标题。有助于使用TOC语法后生成一个完美的目录。\n如何改变文本的样式强调文本 强调文本\n加粗文本 加粗文本\n&#x3D;&#x3D;标记文本&#x3D;&#x3D;\n删除文本\n\n\n\n\n\n\n\n\n\n引用文本\nH2O is是液体。\n2^10^ 运算结果是 1024.\n插入链接与图片链接: link.\n图片: \n带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw &#x3D;30x30)\n居中的图片: \n居中并且带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center &#x3D;30x30)\n当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。\n如何插入一段漂亮的代码片去博客设置页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 代码片.\n​javascript // An highlighted block var foo = &#39;bar&#39;; ​\n生成一个适合你的列表\n项目\n项目\n项目\n\n\n\n\n\n\n项目1\n项目2\n项目3\n\n\n 计划任务\n 完成任务\n\n创建一个表格一个简单的表格是这么创建的：\n\n\n\n项目\nValue\n\n\n\n电脑\n$1600\n\n\n手机\n$12\n\n\n导管\n$1\n\n\n设定内容居中、居左、居右使用:---------:居中使用:----------居左使用----------:居右\n\n\n\n第一列\n第二列\n第三列\n\n\n\n第一列文本居中\n第二列文本居右\n第三列文本居左\n\n\nSmartyPantsSmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：\n\n\n\nTYPE\nASCII\nHTML\n\n\n\nSingle backticks\n&#39;Isn&#39;t this fun?&#39;\n‘Isn’t this fun?’\n\n\nQuotes\n&quot;Isn&#39;t this fun?&quot;\n“Isn’t this fun?”\n\n\nDashes\n-- is en-dash, --- is em-dash\n– is en-dash, — is em-dash\n\n\n创建一个自定义列表MarkdownText-to-HTML conversion toolAuthors:  JohnLuke如何创建一个注脚一个具有注脚的文本。^2\n注释也是必不可少的Markdown将文本转换为 HTML。\n*[HTML]:   超文本标记语言\nKaTeX数学公式您可以使用渲染LaTeX数学表达式 KaTeX:\nGamma公式展示 $\\Gamma(n) &#x3D; (n-1)!\\quad\\foralln\\in\\mathbb N$ 是通过欧拉积分\n$$\\Gamma(z) &#x3D; \\int_0^\\infty t^{z-1}e^{-t}dt,.$$\n\n\n\n\n\n\n\n\n\n你可以找到更多关于的信息 LaTeX 数学表达式here.\n新的甘特图功能，丰富你的文章​mermaid gantt         dateFormat  YYYY-MM-DD         title Adding GANTT diagram functionality to mermaid         section 现有任务         已完成               :done,    des1, 2014-01-06,2014-01-08         进行中               :active,  des2, 2014-01-09, 3d         计划一               :         des3, after des2, 5d         计划二               :         des4, after des3, 5d ​\n\n关于 甘特图 语法，参考 这儿,\n\nUML 图表可以使用UML图表进行渲染。 Mermaid. 例如下面产生的一个序列图：\n​&#96;&#96;&#96;mermaidsequenceDiagram张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?李四–&gt;&gt;王五: 你最近怎么样，王五？李四–x 张三: 我很好，谢谢!李四-x 王五: 我很好，谢谢!Note right of 王五: 李四想了很长时间, 文字太长了不适合放在一行.\n李四–&gt;&gt;张三: 打量着王五…张三-&gt;&gt;王五: 很好… 王五, 你怎么样?​&#96;&#96;&#96;\n这将产生一个流程图。:\n​mermaid graph LR A[长方形] -- 链接 --&gt; B((圆)) A --&gt; C(圆角长方形) B --&gt; D&#123;菱形&#125; C --&gt; D ​\n\n关于 Mermaid 语法，参考 这儿,\n\nFLowchart流程图我们依旧会支持flowchart的流程图：\n​&#96;&#96;&#96;mermaidflowchatst&#x3D;&gt;start: 开始e&#x3D;&gt;end: 结束op&#x3D;&gt;operation: 我的操作cond&#x3D;&gt;condition: 确认？\nst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op​&#96;&#96;&#96;\n\n关于 Flowchart流程图 语法，参考 这儿.\n\n导出与导入导出如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 文章导出 ，生成一个.md文件或者.html文件进行本地保存。\n导入如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，继续你的创作。\n","slug":"markdown-example","date":"2023-10-17T09:01:15.000Z","categories_index":"","tags_index":"blog","author_index":"PIKO"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new postbash$ hexo new &quot;My New Post&quot;More info: Writing\nRun serverbash$ hexo serverMore info: Server\nGenerate static filesbash$ hexo generateMore info: Generating\nDeploy to remote sitesbash$ hexo deployBy the Wayactually you can combine Generate with Deploy\nbash$ hexo g &amp;&amp; hexo dthe new markdown file will be restored in yourblog&#x2F;source&#x2F;_post&#x2F;\nOf course SSH deployment is much slower than the local deployment, you can use the command as follow to deploy in local so that you can check your new blog quickly.\nbash$ hexo sMore info: Deployment\n","slug":"hello-world","date":"2023-10-17T00:52:26.197Z","categories_index":"","tags_index":"blog","author_index":"PIKO"}]