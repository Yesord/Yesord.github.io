{"title":"ROS2 桥接 MQTT 服务器与 Web 通信","uid":"4e143a87dfacf185ad49d19d39f24dfc","slug":"ROS2桥接MQTT服务器与Web通信","date":"2025-07-17T08:43:02.000Z","updated":"2025-07-22T08:58:53.327Z","comments":true,"path":"api/articles/ROS2桥接MQTT服务器与Web通信.json","keywords":null,"cover":"https://imgbed.yesord.top/file/cover/1752742170585_132547500_p0_master1200.jpg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在前海实习的过程，初学 ROS2，项目经理给到业务要做产品的展示，需要将在综保区的ROS自动驾驶车的数据回传到网页进行显示，通过调研可以使用 MQTT 进行简单的数据回传与处理。正好公司也要新进一台服务器，本身要用来部署 DeepSeek，但可以留点空间来做 MQTT 服务器。因此开始钻研如何实现 ROS2-MQTT-WEB 的通信。顺便也记录一下一些简单的 ROS2 命令调试。</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>代码已上传 <a href=\"https://github.com/Yesord/ros2-mqtt-web\">GitHub</a> </p>\n\n</div>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><h2 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h2><p>简单实现的一个 DEMO，就是我 ROS2 开一个 HelloWorld 节点向外广播每 2 秒发一个 Hello，然后写一个 ROS2 与 MQTT bridge 的节点，订阅 HelloWorld 节点的 Hello string 并将 string 传给 MQTT Server 然后在网页端通过 WebSocket 将数据从 MQTT Server 上拿下来显示在网页上，因此也只是ROS2 -&gt; MQTT -&gt; WEB 的单向传输。</p>\n<h3 id=\"MQTT-相关依赖\"><a href=\"#MQTT-相关依赖\" class=\"headerlink\" title=\"MQTT 相关依赖\"></a>MQTT 相关依赖</h3><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 安装 MQTT 服务器</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">apt</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">update</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">apt</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mosquitto</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 安装 MQTT 客户端</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">apt</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">update</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">apt</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mosquitto-clients</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 安装 Python MQTT 客户端库（兼容版本）</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">pip3</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">paho-mqtt==</span><span style=\"color: #F78C6C\">1.6</span><span style=\"color: #C3E88D\">.1</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"HelloWorld节点\"><a href=\"#HelloWorld节点\" class=\"headerlink\" title=\"HelloWorld节点\"></a>HelloWorld节点</h3><p>本身就是一个每 2s 发送 helloworld 字符串消息的发布者节点，没什么好说的。详细实现在GitHub上（<a href=\"https://github.com/Yesord/ros2-mqtt-web/blob/demo/dev_ws/src/hello_world_node/hello_world_node/hello_world_publisher.py\">hello_world_publisher.py</a>）上，网上也有很多相关的代码。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 编译</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> [dev_ws] </span><span style=\"color: #676E95; font-style: italic\">#你的工作空间位置</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">colcon</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--packages-select</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello_world_node</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># source</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> [dev_ws] </span><span style=\"color: #676E95; font-style: italic\">#你的工作空间位置</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">source</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install/setup.bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 运行 hello_world_node 包中的 hello_world_publisher 节点</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello_world_node</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello_world_publisher</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看 ROS2 上正在运行的所有节点</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">node</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">list</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看 ROS2 正在运行的所有的话题</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">topic</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">list</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 查看 helloworld 发布话题信息 可以看到话题发出的 ROS 信息类型与变量名称，这很重要，后面写转接需要一一对应上</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">topic</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">info</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello_world</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 详细看 helloworld 话题发送了什么信息</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">topic</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello_world</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"简单的桥接节点\"><a href=\"#简单的桥接节点\" class=\"headerlink\" title=\"简单的桥接节点\"></a>简单的桥接节点</h3><p>通过 rclpy 创建将 ROS2 信息上传 MQTT 的节点，调用 MQTT 相关类实现 MQTT 协议的相关逻辑。具体实现在 GitHub上 （<a href=\"https://github.com/Yesord/ros2-mqtt-web/tree/demo/dev_ws/src/ros_mqtt_bridge_node/ros_mqtt_bridge_node\">ros_mqtt_bridge_node</a>）。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 编译</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> [dev_ws] </span><span style=\"color: #676E95; font-style: italic\">#你的工作空间位置</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">colcon</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--packages-select</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ros_mqtt_bridge_node</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># source</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> [dev_ws] </span><span style=\"color: #676E95; font-style: italic\">#你的工作空间位置</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">source</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install/setup.bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 运行 ros_mqtt_bridge 节点的发布 hello_world_mqtt_bridge 话题</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">ros_mqtt_bridge_node</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">hello_world_mqtt_bridge</span></span></code></pre></div><p>桥接到 MQTT 上的相关参数在 config 里的 yaml文件</p>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># MQTT Bridge Configuration for Hello World Node</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">mqtt_broker_host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">mqtt_broker_port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1883</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">mqtt_topic_prefix</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ros2</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">mqtt_client_id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello_world_bridge</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">mqtt_username</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">mqtt_password</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"简单网页搭建\"><a href=\"#简单网页搭建\" class=\"headerlink\" title=\"简单网页搭建\"></a>简单网页搭建</h3><p>通过 WebSocket 打通 MQTT 服务器与 Web 之间的通信。因此需要配置好 MQTT的 WebSocket 相关设置。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建正确格式的 Mosquitto 配置文件</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">tee</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/etc/mosquitto/conf.d/websocket.conf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/dev/null</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;&lt;</span><span style=\"color: #BABED8\"> &#39;</span><span style=\"color: #89DDFF\">EOF</span><span style=\"color: #BABED8\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\"># WebSocket 支持配置</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">listener 1883</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">protocol mqtt</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C3E88D\"># WebSocket 监听器 设置为 9001 端口，注意防火墙</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">listener 9001</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">protocol websockets</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C3E88D\"># 允许匿名连接（用于开发测试）</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">allow_anonymous true</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C3E88D\"># 日志级别</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">log_type all</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">EOF</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 重启 Mosquitto 服务</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">restart</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mosquitto</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">status</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mosquitto</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 检查端口监听状态 验证 MQTT的 WebSocket 服务正常运行 能看到 mqtt 相关的就行</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">netstat</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-tlnp</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">grep</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">9001</span></span>\n<span class=\"line\"></span></code></pre></div><p>接下来就是写相关的网页前端代码，详细代码在 GitHub上，就是简单的 <a href=\"https://github.com/Yesord/ros2-mqtt-web/tree/demo/dev_ws/src/web\">HTML + JS + CSS</a>。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 可以通过 start_web_panel.sh 脚本运行</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/web</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 存储网页代码的文件夹</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 给权限</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">chmod</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">+x</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">./start_web_panel.sh</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 运行脚本</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">./start_web_panel.sh</span></span></code></pre></div><h3 id=\"链路验证\"><a href=\"#链路验证\" class=\"headerlink\" title=\"链路验证\"></a>链路验证</h3><p>ROS2 内部节点 -&gt; MQTT 服务器 -&gt; Web 显示</p>\n<h4 id=\"验证节点连接\"><a href=\"#验证节点连接\" class=\"headerlink\" title=\"验证节点连接\"></a>验证节点连接</h4><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 另起终端 通过 rqt 勘察节点之间的关系</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ros2</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">run</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rqt_graph</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">rqt_graph</span></span>\n<span class=\"line\"></span></code></pre></div><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">节点连接关系</p>\n<p><div align=center>\n    <img src=\"https://imgbed.yesord.top/file/cover/1753167884156_微信截图_20250722150239.png\">\n</div>\n\n</p>\n</div>\n<p>通过这个可以看到我们成功将 helloworld 信息从发布者节点通过 hello_world 话题传给了桥接节点。</p>\n<h4 id=\"验证-MQTT-服务器\"><a href=\"#验证-MQTT-服务器\" class=\"headerlink\" title=\"验证 MQTT 服务器\"></a>验证 MQTT 服务器</h4><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 订阅所有 ros2 相关话题，这里是用本机作为 MQTT 服务器，显示话题名和内容，提前保证 1883 端口的可用性</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">mosquitto_sub</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-h</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-p</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1883</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-t</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ros2/#</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-v</span></span>\n<span class=\"line\"></span></code></pre></div><p>能在命令行 echo 到话题的 json格式的数据就是证明能成功上传到 MQTT 服务器</p>\n<h4 id=\"验证-Web-接收\"><a href=\"#验证-Web-接收\" class=\"headerlink\" title=\"验证 Web 接收\"></a>验证 Web 接收</h4><p>在浏览器开启端口8080打开监控界面</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">https://localhost:8080/index.html</span></span></code></pre></div><div align=center>\n    <img src=\"https://imgbed.yesord.top/file/cover/1753170397525_微信截图_20250722154603.png\">\n</div>\n\n<p>结果证明可以跑通，能在 Web 上接收到消息</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">总体链路可以跑通</span></span></code></pre></div><h1 id=\"v1\"><a href=\"#v1\" class=\"headerlink\" title=\"v1\"></a>v1</h1><h2 id=\"优化思路\"><a href=\"#优化思路\" class=\"headerlink\" title=\"优化思路\"></a>优化思路</h2><p>将只对 helloworld 节点的硬编码桥接改成对任意 ROS2 节点可以进行编码改变的版本，通过 config 的 yaml 实现对不同节点进行配置。目前主要需要对图像传输和字符传输这两种不同形式的数据进行传输，这两种数据需要差异化编写。代码已上传GitHub <a href=\"https://github.com/Yesord/ros2-mqtt-web/tree/v1\">v1</a></p>\n","text":"前言最近在前海实习的过程，初学 ROS2，项目经理给到业务要做产品的展示，需要将在综保区的ROS自动驾驶车的数据回传到网页进行显示，通过调研可以使用 MQTT ...","permalink":"/post/ROS2桥接MQTT服务器与Web通信","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"ROS","slug":"ROS","count":1,"path":"api/tags/ROS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Demo\"><span class=\"toc-text\">Demo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">实现思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MQTT-%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">MQTT 相关依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HelloWorld%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">HelloWorld节点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E7%9A%84%E6%A1%A5%E6%8E%A5%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">简单的桥接节点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E7%BD%91%E9%A1%B5%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">简单网页搭建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%B7%AF%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">链路验证</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E8%8A%82%E7%82%B9%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">验证节点连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81-MQTT-%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">验证 MQTT 服务器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81-Web-%E6%8E%A5%E6%94%B6\"><span class=\"toc-text\">验证 Web 接收</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#v1\"><span class=\"toc-text\">v1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">优化思路</span></a></li></ol></li></ol>","author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个四年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"深度学习细胞虚拟染色研究","uid":"7334b3419d5caf6520825251532abbd2","slug":"深度学习细胞虚拟染色研究","date":"2025-10-02T09:06:57.000Z","updated":"2025-10-25T13:00:25.714Z","comments":true,"path":"api/articles/深度学习细胞虚拟染色研究.json","keywords":null,"cover":"https://imgbed.yesord.top/file/cover/1758794562104_GK4GpkrbUAAW2vE.jpg","text":"前言这是我 目标利用所提供的不成对的数据集（即输入和输出图像并不是完全对称）以及深度学习技术对血细胞虚拟染色。实现从黑白图像（灰度图像）到RGB彩色图像的迁移。...","permalink":"/post/深度学习细胞虚拟染色研究","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"DeepLearning","slug":"DeepLearning","count":1,"path":"api/categories/DeepLearning.json"}],"tags":[{"name":"ComputerVision","slug":"ComputerVision","count":4,"path":"api/tags/ComputerVision.json"},{"name":"python","slug":"python","count":6,"path":"api/tags/python.json"}],"author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个四年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}}},"next_post":{"title":"上传 GitHub 的若干方法","uid":"222425fd00a7157700d67225b13528c8","slug":"上传GitHub的若干方法","date":"2025-07-17T07:55:50.000Z","updated":"2025-07-22T08:58:30.153Z","comments":true,"path":"api/articles/上传GitHub的若干方法.json","keywords":null,"cover":"https://imgbed.yesord.top/file/cover/1752739299434_129563571_p0_master1200.jpg","text":"前言突发奇想简单记录 GitHub Desktop (APP)下载GitHub Desktop 优点 操作简单易懂，不用敲任何一行命令就可以上传下载仓库，而且似...","permalink":"/post/上传GitHub的若干方法","photos":[],"count_time":{"symbolsCount":881,"symbolsTime":"1 mins."},"categories":[{"name":"Skill","slug":"Skill","count":1,"path":"api/categories/Skill.json"}],"tags":[{"name":"GitHub","slug":"GitHub","count":1,"path":"api/tags/GitHub.json"}],"author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个四年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}}}}