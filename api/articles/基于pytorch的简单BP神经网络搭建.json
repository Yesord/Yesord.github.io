{"title":"基于pytorch的简单BP神经网络搭建","uid":"150ed4b39e17f0239763704a3281f203","slug":"基于pytorch的简单BP神经网络搭建","date":"2023-11-21T15:56:50.000Z","updated":"2024-11-03T04:51:55.716Z","comments":true,"path":"api/articles/基于pytorch的简单BP神经网络搭建.json","keywords":null,"cover":"https://s2.loli.net/2023/11/22/dUzaVA5PKlTWhbN.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"神经网络-个人理解\"><a href=\"#神经网络-个人理解\" class=\"headerlink\" title=\"神经网络(个人理解)\"></a>神经网络(个人理解)</h2><p>神经网络本质就是权重，就是计算机在那算数，计算你输入的值经过网络迭代后得到另一个值，就很像函数对应一样，但是能进行推理，输入定义域以外的数，它能给你推理出来一个接近的解。<br>喂数据可以提高网络的精确性，本质也是让它改变更新权重（改变对应法则），让网络更倾向去得到你想要的值。</p>\n<p>最基本神经网络结构由三部分构成：输入层、隐藏层、输出层<br>这三部分之间是存在逻辑关系的，人为指定，一般比较简单，无非就是一些简单的函数变换，因为每步的计算简单，所以需要占用大量的算力，适合使用GPU。</p>\n<h2 id=\"BP算法-个人理解\"><a href=\"#BP算法-个人理解\" class=\"headerlink\" title=\"BP算法(个人理解)\"></a>BP算法(个人理解)</h2><p>前向传播：完成从输入到隐藏在到输出的过程，由输入得到输出<br>后向传播：完成从输出到输入的过程，由误差更新每一步的权重</p>\n<h2 id=\"python代码实现\"><a href=\"#python代码实现\" class=\"headerlink\" title=\"python代码实现\"></a>python代码实现</h2><h3 id=\"train-py\"><a href=\"#train-py\" class=\"headerlink\" title=\"train.py\"></a>train.py</h3><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">############################################</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#               简单训练模块                #</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">############################################</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">####一定要在train.py目录下创建weight文件夹####</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> os</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">from</span><span style=\"color: #BABED8\"> sys </span><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> path </span><span style=\"color: #89DDFF; font-style: italic\">as</span><span style=\"color: #BABED8\"> sys_path</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">script_path </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">dirname</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">abspath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">__file__</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 获取当前脚本的绝对路径</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">parent_path </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">dirname</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">dirname</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">script_path</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 获取当前脚本的上级目录</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">sys_path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">parent_path</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将上级目录加入到系统路径中</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">from</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">utils</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> Dataset</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> DataLoader </span><span style=\"color: #676E95; font-style: italic\"># 导入数据集和数据加载器</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> torch</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">nn</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">as</span><span style=\"color: #BABED8\"> nn </span><span style=\"color: #676E95; font-style: italic\"># 导入神经网络模块</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">from</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">optim </span><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> SGD </span><span style=\"color: #676E95; font-style: italic\"># 导入随机梯度下降优化器</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> time </span><span style=\"color: #676E95; font-style: italic\"># 导入时间模块</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> matplotlib</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">pyplot</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">as</span><span style=\"color: #BABED8\"> plt </span><span style=\"color: #676E95; font-style: italic\"># 导入绘图模块</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##################################################################################################</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建输入数据,手敲数据集</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">9</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">13</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">13</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">14</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">16</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">17</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">18</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">19</span><span style=\"color: #89DDFF\">]]</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">y </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[[</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">13</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">17</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">22</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">24</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">25</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">29</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">33</span><span style=\"color: #89DDFF\">],[</span><span style=\"color: #F78C6C\">37</span><span style=\"color: #89DDFF\">]]</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">X </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tensor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">float</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将x转换成张量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Y </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tensor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">y</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">float</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将y转换成张量</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">device </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">cuda</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">cuda</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">is_available</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">cpu</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\"># 判断是否有cuda</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">X </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> X</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">to</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">device</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\"># 将x放到cuda上</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">Y </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Y</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">to</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">device</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\"># 将y放到cuda上</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##################################################################################################</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建神经网络的类</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">MyNeuralNetwork</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Module</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">__init__</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #FFCB6B\">super</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">MyNeuralNetwork</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #BABED8\">self</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">__init__</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\"># 创建神经网络的层就是直接调用一些nn提供的函数来实现的</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">input_to_hidden_layer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Linear</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 输入层到隐藏层 nn.Linear(2,10)表示输入层有2个神经元，隐藏层有10个神经元</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">hidden_to_output_layer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Linear</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 隐藏层到输出层</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">hidden_layer_activation</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ReLU</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 激活函数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">forward</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\"># 前向传播 表达层与层之间的逻辑关系</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">input_to_hidden_layer</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 输入层到隐藏层</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">hidden_layer_activation</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 激活函数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">hidden_to_output_layer</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 隐藏层到输出层</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> x</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建数据集类</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">MyDataset</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">Dataset</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">__init__</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">y</span><span style=\"color: #89DDFF\">):</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 初始化数据集</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">x</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tensor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">float</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将x转换成张量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tensor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">y</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">float</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将y转换成张量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">len</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#数据集的长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">__getitem__</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">index</span><span style=\"color: #89DDFF\">):</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#获取数据集中的一条数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">x</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">index</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">y</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">index</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#返回数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">__len__</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">):</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#获取数据集的长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">len</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##################################################################################################    </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 实例化神经网络</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">manual_seed</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 设置随机数种子</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">mynet </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MyNeuralNetwork</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">to</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">device</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 创建神经网络</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">mynet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">input_to_hidden_layer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">weight</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 查看输入层到隐藏层的权重</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> par </span><span style=\"color: #89DDFF; font-style: italic\">in</span><span style=\"color: #BABED8\"> mynet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">parameters</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 查看神经网络的参数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">par</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">dataset </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MyDataset</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">X</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> Y</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 实例化数据集 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">dataloader </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">DataLoader</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">dataset</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #BABED8; font-style: italic\">batch_size</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #BABED8; font-style: italic\">shuffle</span><span style=\"color: #89DDFF\">=True)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 实例化数据加载器 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 从dataset加载 batch_size=2表示每次加载2条数据，shuffle=True表示打乱数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> data </span><span style=\"color: #89DDFF; font-style: italic\">in</span><span style=\"color: #BABED8\"> dataloader</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 从dataloader中循环取出数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">data</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 打印数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##################################################################################################</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 创建损失函数和优化器</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">loss_func </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MSELoss</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 均方误差损失函数 </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">optimizer </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">SGD</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">mynet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">parameters</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #BABED8; font-style: italic\">lr</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0.0015</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 随机梯度下降优化器 lr 学习率</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># optimizer.zero_grad() # 梯度清零</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># loss_value = loss_func(mynet(X), Y) # 计算损失</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># loss_value.backward() # 反向传播</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># optimizer.step() # 更新权重</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">##################################################################################################</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">loss_history </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 创建一个空列表，用于保存损失值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">train_epoch </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 训练次数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">start </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> time</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">time</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 记录开始时间</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> epoch </span><span style=\"color: #89DDFF; font-style: italic\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">range</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">train_epoch</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> data </span><span style=\"color: #89DDFF; font-style: italic\">in</span><span style=\"color: #BABED8\"> dataloader</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 从dataloader中循环取出数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> y </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> data</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        optimizer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">zero_grad</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 梯度清零</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        loss_value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">loss_func</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">mynet</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #82AAFF\"> y</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 计算损失</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        loss_value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">backward</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 反向传播</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        optimizer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">step</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 更新权重</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        loss_history</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">loss_value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">item</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将损失值添加到列表中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> epoch </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">and</span><span style=\"color: #BABED8\"> epoch </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> train_epoch </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ion</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 打开交互模式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">plot</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">loss_history</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 绘制损失曲线</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">title</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Loss over the increasing number of epoch</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 设置标题</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">xlabel</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Epoch</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 设置x轴标签</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ylabel</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Loss</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 设置y轴标签</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">pause</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0.1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 暂停0.1秒</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">elif</span><span style=\"color: #BABED8\"> epoch </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> train_epoch </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ioff</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 关闭交互模式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            plt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">show</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 显示图像</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">end </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> time</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">time</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 记录结束时间</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">训练时间：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> end </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #82AAFF\"> start</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 打印训练时间</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">val_x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[[</span><span style=\"color: #F78C6C\">13</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">19</span><span style=\"color: #89DDFF\">]]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 1*2的list</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">val_x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tensor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">float</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">to</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">device</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将val_x转换成张量</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">prediction </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">mynet</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 预测val_x的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">prediction_int </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">round</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">prediction</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">item</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将预测值转换成整数</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F78C6C\">&#123;&#125;</span><span style=\"color: #C3E88D\"> + </span><span style=\"color: #F78C6C\">&#123;&#125;</span><span style=\"color: #C3E88D\"> = </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">format</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #FFCB6B\">str</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">prediction_int</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 打印预测值</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 获取train.py的路径</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">script_dir </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">dirname</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">abspath</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">__file__</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 构造模型文件的路径</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">directory </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">script_dir</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">weight</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 如果目录不存在，创建它</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">not</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">exists</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">directory</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">makedirs</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">directory</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 保存模型参数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">save</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">mynet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">state_dict</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #82AAFF\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">path</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">directory</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">BP_Pytorch.pth</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 保存模型参数是以当前路径为参考路径的</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"val-py\"><a href=\"#val-py\" class=\"headerlink\" title=\"val.py\"></a>val.py</h3><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">python</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> torch</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">nn</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">as</span><span style=\"color: #BABED8\"> nn</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">from</span><span style=\"color: #BABED8\"> torchsummary </span><span style=\"color: #89DDFF; font-style: italic\">import</span><span style=\"color: #BABED8\"> summary</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">MyNeuralNetwork</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Module</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">__init__</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #FFCB6B\">super</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">MyNeuralNetwork</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #BABED8\">self</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">__init__</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\"># 创建神经网络的层就是直接调用一些nn提供的函数来实现的</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">input_to_hidden_layer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Linear</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 输入层到隐藏层 nn.Linear(2,10)表示输入层有2个神经元，隐藏层有10个神经元</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">hidden_to_output_layer</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Linear</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 隐藏层到输出层</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #F07178\">hidden_layer_activation</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nn</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ReLU</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 激活函数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">forward</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F07178; font-style: italic\">self</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">):</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\"># 前向传播 表达层与层之间的逻辑关系</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">input_to_hidden_layer</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 输入层到隐藏层</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">hidden_layer_activation</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 激活函数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> self</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">hidden_to_output_layer</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 隐藏层到输出层</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> x</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">model </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">MyNeuralNetwork</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">to</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">cuda</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 创建神经网络</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">static_dict </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">load</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">BP_Pytorch.pth</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">model</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">load_state_dict</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">static_dict</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 加载模型参数 保证模型参数一致即可，不需要保证模型结构一致</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#类创建的神经网络和nn.Squential（序贯）创建的神经网络的参数保存和加载方式不同，二者不能混用</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">summary</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">model</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #BABED8; font-style: italic\">input_data</span><span style=\"color: #89DDFF\">=(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 打印模型结构</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">请输入两个数，我来帮你计算它们的和：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">x1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">float</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">input</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">请输入第一个数：</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">x2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">float</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">input</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">请输入第二个数：</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">val_x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[[</span><span style=\"color: #BABED8\">x1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">x2</span><span style=\"color: #89DDFF\">]]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#创建列表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">val_x </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> torch</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tensor</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">float</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">to</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">cuda</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">prediction </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">model</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 预测val_x的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">prediction_int </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">round</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">prediction</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">item</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 将预测值转换成整数</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #F78C6C\">&#123;&#125;</span><span style=\"color: #C3E88D\"> + </span><span style=\"color: #F78C6C\">&#123;&#125;</span><span style=\"color: #C3E88D\"> = </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">format</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #82AAFF\">val_x</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">][</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #FFCB6B\">str</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">prediction</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">item</span><span style=\"color: #89DDFF\">()))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># 打印预测值</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div>","text":"前言神经网络(个人理解)神经网络本质就是权重，就是计算机在那算数，计算你输入的值经过网络迭代后得到另一个值，就很像函数对应一样，但是能进行推理，输入定义域以外的...","permalink":"/post/基于pytorch的简单BP神经网络搭建","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"AI","slug":"AI","count":3,"path":"api/categories/AI.json"}],"tags":[{"name":"ANN","slug":"ANN","count":1,"path":"api/tags/ANN.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C-%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">神经网络(个人理解)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BP%E7%AE%97%E6%B3%95-%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">BP算法(个人理解)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#python%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">python代码实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#train-py\"><span class=\"toc-text\">train.py</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#val-py\"><span class=\"toc-text\">val.py</span></a></li></ol></li></ol></li></ol>","author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个三年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"基于运放的信号发生电路总结","uid":"7ef338d136f909941106f7733815b8c9","slug":"基于运放的信号发生电路总结","date":"2024-01-18T13:46:56.000Z","updated":"2024-11-07T03:06:53.916Z","comments":true,"path":"api/articles/基于运放的信号发生电路总结.json","keywords":null,"cover":"https://s2.loli.net/2024/11/05/IVuQs4OBR8YfSNe.jpg","text":"前言最近在导师那里接了一个做蓄电池检测仪的项目，在测量电池内阻时需要向电池打一个稳定的小正弦交流，因此开始研究如何使用运算放大器实现正弦信号的发生和最终的电流输...","permalink":"/post/基于运放的信号发生电路总结","photos":[],"count_time":{"symbolsCount":712,"symbolsTime":"1 mins."},"categories":[{"name":"Electronic","slug":"Electronic","count":9,"path":"api/categories/Electronic.json"}],"tags":[{"name":"design","slug":"design","count":2,"path":"api/tags/design.json"}],"author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个三年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}}},"next_post":{"title":"计算方法——一些算法的python实现","uid":"c7f2a0b48c2c1da08799955658fe960e","slug":"计算方法——一些算法的python实现","date":"2023-11-20T16:14:56.000Z","updated":"2024-11-03T04:51:55.720Z","comments":true,"path":"api/articles/计算方法——一些算法的python实现.json","keywords":null,"cover":"https://s2.loli.net/2023/10/22/FivQZlT2kHXdEsu.jpg","text":"前言本文是基于python实现的计算方法课程的算法，仅实数域内计算。部分算法提供迭代曲线的绘制（基于matplotlib），可以在控制台打印每一步的迭代结果 G...","permalink":"/post/计算方法——一些算法的python实现","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":5,"path":"api/tags/python.json"}],"author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个三年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}}}}