{"title":"FreeRTOS学习笔记","uid":"61f52ac56de5cfb5fc47f2f3f1fa4dd8","slug":"FreeRTOS学习笔记","date":"2023-11-15T09:19:00.000Z","updated":"2025-09-25T10:35:43.530Z","comments":true,"path":"api/articles/FreeRTOS学习笔记.json","keywords":null,"cover":"https://imgbed.yesord.top/file/cover/1758794562104_GK4GpkrbUAAW2vE.jpg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本博文只是整理了本人学习 FreeRTOS 的一些笔记，仅作简单记录。</p>\n<h1 id=\"FreeRTOS的任务基础操作\"><a href=\"#FreeRTOS的任务基础操作\" class=\"headerlink\" title=\"FreeRTOS的任务基础操作\"></a>FreeRTOS的任务基础操作</h1><h2 id=\"任务创建和删除的API函数\"><a href=\"#任务创建和删除的API函数\" class=\"headerlink\" title=\"任务创建和删除的API函数\"></a>任务创建和删除的API函数</h2><p>调用FreeRTOS的API函数</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">API函数</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">xTaskCreate()</td>\n<td align=\"center\">动态方式创建任务</td>\n</tr>\n<tr>\n<td align=\"center\">xTaskCreateStatic()</td>\n<td align=\"center\">静态方式创建任务</td>\n</tr>\n<tr>\n<td align=\"center\">vTaskDelete()</td>\n<td align=\"center\">删除任务</td>\n</tr>\n</tbody></table>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">动态创建：FreeRTOS内核负责分配从FreeRTOS 管理的堆中分配的任务控制块以及任务的栈空间所需的内存</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">静态创建：用户自己分配任务的任务控制块以及任务的栈空间所需的内存</span></span></code></pre></div><h2 id=\"任务创建\"><a href=\"#任务创建\" class=\"headerlink\" title=\"任务创建\"></a>任务创建</h2><p>动态方法创建</p>\n<ol>\n<li>   将宏configSUPPORT_DYNAMIC_ALLOCATION 配置为 1</li>\n<li>   定义函数入口参数xTaskCreate()</li>\n<li>   编写任务函数</li>\n</ol>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>此函数创建的任务会立刻进入就绪态，由任务调度器调度运行</p>\n\n</div>\n<p>动态创建任务函数内部实现</p>\n<ol>\n<li>   申请堆栈内存&amp;任务控制块内存</li>\n<li>   TCB结构体成员赋值</li>\n<li>   添加新任务到就绪列表中</li>\n</ol>\n<p>入口函数参数</p>\n<div align=center>\n    <img src=\"https://imgbed.yesord.top/file/blog/1758794110860_图片1.png\">\n</div>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">返回值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">pdPASS</td>\n<td align=\"center\">任务创建成功</td>\n</tr>\n<tr>\n<td align=\"center\">errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY</td>\n<td align=\"center\">任务创建失败</td>\n</tr>\n</tbody></table>\n<p>TCB任务控制块</p>\n<div align=center>\n    <img src=\"https://imgbed.yesord.top/file/blog/1758794104834_图片2.png\">\n</div>\n\n\n<p>任务栈栈顶，在任务切换时的任务上下文保存、任务恢复息息相关</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><p>每个任务都有属于自己的任务控制块，类似身份证</p>\n</p>\n</div>\n<p>静态方法</p>\n<ol>\n<li>   需将宏configSUPPORT_STATIC_ALLOCATION 配置为 1</li>\n<li>   定义空闲任务&amp;定时器任务的任务堆栈及TCB</li>\n<li>   实现两个接口函数<br>（vApplicationGetIdleTaskMemory( ) vApplicationGetTimerTaskMemory () ）</li>\n<li>   定义函数入口参数</li>\n<li>   编写任务函数</li>\n</ol>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>此函数创建的任务会立刻进入就绪态，由任务调度器调度运行</p>\n\n</div>\n<p>静态创建内部实现</p>\n<ol>\n<li>   TCB结构体成员赋值</li>\n<li>   添加新任务到就绪列表中</li>\n</ol>\n<h2 id=\"任务删除\"><a href=\"#任务删除\" class=\"headerlink\" title=\"任务删除\"></a>任务删除</h2><p>void vTaskDelete(TaskHandle_t xTaskToDelete);</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">形参</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">xTaskToDelete</td>\n<td align=\"center\">待删除任务的任务句柄</td>\n</tr>\n</tbody></table>\n<p>用于删除已被创建的任务<br>被删除的任务将从就绪态任务列表、阻塞态任务列表、挂起态任务列表和事件列表中移除</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><ol>\n<li>当传入的参数为NULL，则代表删除任务自身（当前正在运行的任务）但是得等到空闲</li>\n<li>空闲任务会负责释放被删除任务中由系统分配的内存，但是由用户在任务删除前申请的内存， 则需要由用户在任务被删除前提前释放，否则将导致内存泄露 （正在运行是不会立刻移除的）</li>\n</ol>\n</p>\n</div>\n<p>删除任务流程</p>\n<ol>\n<li>使用删除任务函数，需将宏INCLUDE_vTaskDelete 配置为 1 </li>\n<li>入口参数输入需要删除的任务句柄（NULL代表删除本身）</li>\n</ol>\n<p>内部操作</p>\n<ol>\n<li>获取所要删除任务的控制块</li>\n<li>将被删除任务，移除所在列表</li>\n<li>判断所需要删除的任务</li>\n<li>更新下个任务的阻塞时间</li>\n</ol>\n<h2 id=\"任务的挂起与恢复API函数\"><a href=\"#任务的挂起与恢复API函数\" class=\"headerlink\" title=\"任务的挂起与恢复API函数\"></a>任务的挂起与恢复API函数</h2><table>\n<thead>\n<tr>\n<th align=\"center\">API函数</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">vTaskSuspend()</td>\n<td align=\"center\">挂起任务</td>\n</tr>\n<tr>\n<td align=\"center\">vTaskResume()</td>\n<td align=\"center\">恢复被挂起的任务</td>\n</tr>\n<tr>\n<td align=\"center\">xTaskResumeFromISR()</td>\n<td align=\"center\">在中断中恢复被挂起的任务</td>\n</tr>\n</tbody></table>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>挂起：挂起任务类似暂停，可恢复； 删除任务，无法恢复，类似“人死两清”<br>恢复：恢复被挂起的任务<br>FromISR：带FromISR后缀是在中断函数中专用的API函数</p>\n\n</div>\n<p>任务挂起函数介绍<br>void vTaskSuspend(TaskHandle_t xTaskToSuspend) </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">形参</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">xTaskSuspend</td>\n<td align=\"center\">待挂起任务的任务句柄</td>\n</tr>\n</tbody></table>\n<p>无论优先级如何，被挂起的任务都将不再被执行，直到任务被恢复 。</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><p>当传入的参数为NULL，则代表挂起任务自身（当前正在运行的任务）</p>\n</p>\n</div>\n<p>任务恢复函数介绍<br>void vTaskResume(TaskHandle_t xTaskToResume)</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">形参</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">xTaskToResume</td>\n<td align=\"center\">待恢复任务的任务句柄</td>\n</tr>\n</tbody></table>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>任务无论被 vTaskSuspend() 挂起多少次，只需在任务中调用  vTakResume() 恢复一次，就可以继续运行。且被恢复的任务会进入就绪态！</p>\n\n</div>\n<p>任务恢复函数介绍<br>BaseType_t xTaskResumeFromISR(TaskHandle_t xTaskToResume)  </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">形参</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">xTaskToResume</td>\n<td align=\"center\">待恢复任务的任务句柄</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">返回值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">pdTRUE</td>\n<td align=\"center\">任务恢复后需要进行任务切换</td>\n</tr>\n<tr>\n<td align=\"center\">pdFALSE</td>\n<td align=\"center\">任务恢复后不需要进行任务切换</td>\n</tr>\n</tbody></table>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><p>中断服务程序中要调用freeRTOS的API函数则中断优先级不能高于FreeRTOS所管理的最高优先级(默认5-15)</p>\n</p>\n</div>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://www.bilibili.com/video/BV19g411p7UT/\">正点原子</a></p>\n","text":"前言本博文只是整理了本人学习 FreeRTOS 的一些笔记，仅作简单记录。 FreeRTOS的任务基础操作任务创建和删除的API函数调用FreeRTOS的API...","permalink":"/post/FreeRTOS学习笔记","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":5,"path":"api/categories/Embedded.json"}],"tags":[{"name":"RTOS","slug":"RTOS","count":2,"path":"api/tags/RTOS.json"},{"name":"STM32","slug":"STM32","count":3,"path":"api/tags/STM32.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#FreeRTOS%E7%9A%84%E4%BB%BB%E5%8A%A1%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">FreeRTOS的任务基础操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E5%8A%A1%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4%E7%9A%84API%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">任务创建和删除的API函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E5%8A%A1%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">任务创建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E5%8A%A1%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">任务删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%8C%82%E8%B5%B7%E4%B8%8E%E6%81%A2%E5%A4%8DAPI%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">任务的挂起与恢复API函数</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol>","author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个四年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"pytorch环境搭建下遇到的问题","uid":"a6d09d63bbb6828b08c842fdfa1f3e69","slug":"pytorch环境搭建下遇到的问题","date":"2023-11-15T13:53:53.000Z","updated":"2024-11-03T04:51:55.711Z","comments":true,"path":"api/articles/pytorch环境搭建下遇到的问题.json","keywords":null,"cover":"https://s2.loli.net/2023/10/22/Scg4WKwdb72nfFu.jpg","text":"前言总所周知，ai的发展是极度迅速的，ai相关的软件与库的更新速度极快，很容易出现库依赖之间的不兼容，因而基于anaconda下的pytorch环境搭建总是会遇...","permalink":"/post/pytorch环境搭建下遇到的问题","photos":[],"count_time":{"symbolsCount":226,"symbolsTime":"1 mins."},"categories":[{"name":"AI","slug":"AI","count":3,"path":"api/categories/AI.json"}],"tags":[{"name":"ComputerVision","slug":"ComputerVision","count":3,"path":"api/tags/ComputerVision.json"}],"author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个四年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}}},"next_post":{"title":"滤波电路设计","uid":"7654cddd589d5117806bb3f535f9e67b","slug":"滤波电路设计","date":"2023-11-07T15:33:17.000Z","updated":"2024-11-03T04:51:55.719Z","comments":true,"path":"api/articles/滤波电路设计.json","keywords":null,"cover":"https://s2.loli.net/2023/10/22/l3htjIV41UgP7kc.jpg","text":"前言滤波电路是一种用于过滤信号的电路，它将仅传递所需的信号并滤去不需要的信号。通常，滤波电路由无源元件或有源元件设计。 · 无源元件包括电阻器、电感器和电容器。...","permalink":"/post/滤波电路设计","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Electronic","slug":"Electronic","count":9,"path":"api/categories/Electronic.json"}],"tags":[{"name":"design","slug":"design","count":2,"path":"api/tags/design.json"}],"author":{"name":"Yesord","slug":"blog-author","avatar":"/img/avatar/Flametail.gif","link":"/","description":"猫军阀军校的一个四年级学牲。","socials":{"github":"https://github.com/Yesord","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/aoliba_believer","juejin":"","customs":{"Home":{"icon":"/img/Home.svg","link":"https://home.yesord.top/about/"},"Academic":{"icon":"/img/Academic.svg","link":"https://academic.yesord.top"},"Travelling":{"icon":"/img/train.svg","link":"https://www.travellings.cn/go.html"}}}}}}